{"remainingRequest":"/Users/zx/Desktop/zxwin/study_project/vue/SuperMall/supermall/node_modules/thread-loader/dist/cjs.js!/Users/zx/Desktop/zxwin/study_project/vue/SuperMall/supermall/node_modules/babel-loader/lib/index.js!/Users/zx/Desktop/zxwin/study_project/vue/SuperMall/supermall/src/network/request.js","dependencies":[{"path":"/Users/zx/Desktop/zxwin/study_project/vue/SuperMall/supermall/src/network/request.js","mtime":1603256936118},{"path":"/Users/zx/Desktop/zxwin/study_project/vue/SuperMall/supermall/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zx/Desktop/zxwin/study_project/vue/SuperMall/supermall/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zx/Desktop/zxwin/study_project/vue/SuperMall/supermall/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvengvRGVza3RvcC96eHdpbi9zdHVkeV9wcm9qZWN0L3Z1ZS9TdXBlck1hbGwvc3VwZXJtYWxsL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCB7IFRvYXN0IH0gZnJvbSAndmFudCc7CmV4cG9ydCBmdW5jdGlvbiByZXF1ZXN0KGNvbmZpZykgewogIHZhciBfYXhpb3MkY3JlYXRlOwoKICAvLyAxLuWIm+W7umF4aW9z55qE5a6e5L6LCiAgdmFyIGluc3RhbmNlID0gYXhpb3MuY3JlYXRlKChfYXhpb3MkY3JlYXRlID0gewogICAgYmFzZVVSTDogJ+aOpeWPo+WcsOWdgCcKICB9LCBfZGVmaW5lUHJvcGVydHkoX2F4aW9zJGNyZWF0ZSwgImJhc2VVUkwiLCAnaHR0cDovLzEyMy4yMDcuMzIuMzI6ODAwMC9hcGkvaDgnKSwgX2RlZmluZVByb3BlcnR5KF9heGlvcyRjcmVhdGUsICJ0aW1lb3V0IiwgNTAwMCksIF9heGlvcyRjcmVhdGUpKTsgLy8gMi5heGlvc+eahOaLpuaIquWZqAogIC8vIDIuMS7or7fmsYLmi6bmiKrnmoTkvZznlKgKCiAgaW5zdGFuY2UuaW50ZXJjZXB0b3JzLnJlcXVlc3QudXNlKGZ1bmN0aW9uIChjb25maWcpIHsKICAgIFRvYXN0LmxvYWRpbmcoewogICAgICBtZXNzYWdlOiAn5Yqg6L295LitLi4uJywKICAgICAgZm9yYmlkQ2xpY2s6IHRydWUsCiAgICAgIGxvYWRpbmdUeXBlOiAnc3Bpbm5lcicKICAgIH0pOwogICAgcmV0dXJuIGNvbmZpZzsKICB9LCBmdW5jdGlvbiAoZXJyKSB7CiAgICBjb25zb2xlLmxvZyhlcnIpOwogIH0pOyAvLyAyLjIu5ZON5bqU5oum5oiqCgogIGluc3RhbmNlLmludGVyY2VwdG9ycy5yZXNwb25zZS51c2UoZnVuY3Rpb24gKHJlcykgewogICAgVG9hc3QuY2xlYXIoKTsKICAgIHJldHVybiByZXMuZGF0YTsKICB9LCBmdW5jdGlvbiAoZXJyKSB7CiAgICBjb25zb2xlLmxvZyhlcnIpOwogIH0pOyAvLyAzLuWPkemAgeecn+ato+eahOe9kee7nOivt+axggoKICByZXR1cm4gaW5zdGFuY2UoY29uZmlnKTsgLy/ov5Tlm57kuIDkuKpQcm9taXNlCn0="},{"version":3,"sources":["/Users/zx/Desktop/zxwin/study_project/vue/SuperMall/supermall/src/network/request.js"],"names":["axios","Toast","request","config","instance","create","baseURL","interceptors","use","loading","message","forbidClick","loadingType","err","console","log","response","res","clear","data"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,MAAtB;AAEA,OAAO,SAASC,OAAT,CAAiBC,MAAjB,EAAyB;AAAA;;AAC9B;AACA,MAAMC,QAAQ,GAAGJ,KAAK,CAACK,MAAN;AACfC,IAAAA,OAAO,EAAE;AADM,+CAEN,kCAFM,6CAIN,IAJM,kBAAjB,CAF8B,CAS9B;AACA;;AACAF,EAAAA,QAAQ,CAACG,YAAT,CAAsBL,OAAtB,CAA8BM,GAA9B,CAAkC,UAAAL,MAAM,EAAI;AAC1CF,IAAAA,KAAK,CAACQ,OAAN,CAAc;AACZC,MAAAA,OAAO,EAAE,QADG;AAEZC,MAAAA,WAAW,EAAE,IAFD;AAGZC,MAAAA,WAAW,EAAE;AAHD,KAAd;AAKA,WAAOT,MAAP;AACD,GAPD,EAOG,UAAAU,GAAG,EAAI;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,GATD,EAX8B,CAsB9B;;AACAT,EAAAA,QAAQ,CAACG,YAAT,CAAsBS,QAAtB,CAA+BR,GAA/B,CAAmC,UAAAS,GAAG,EAAI;AACxChB,IAAAA,KAAK,CAACiB,KAAN;AACA,WAAOD,GAAG,CAACE,IAAX;AACD,GAHD,EAGG,UAAAN,GAAG,EAAI;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,GALD,EAvB8B,CA8B9B;;AACA,SAAOT,QAAQ,CAACD,MAAD,CAAf,CA/B8B,CA+BN;AACzB","sourcesContent":["import axios from 'axios'\nimport { Toast } from 'vant';\n\nexport function request(config) {\n  // 1.创建axios的实例\n  const instance = axios.create({\n    baseURL: '接口地址',\n    baseURL: 'http://123.207.32.32:8000/api/h8',\n    // baseURL: 'http://152.136.185.210:8000/api/w6',\n    timeout: 5000\n  })\n\n  // 2.axios的拦截器\n  // 2.1.请求拦截的作用\n  instance.interceptors.request.use(config => {\n    Toast.loading({\n      message: '加载中...',\n      forbidClick: true,\n      loadingType: 'spinner'\n    });\n    return config\n  }, err => {\n    console.log(err);\n  })\n\n  // 2.2.响应拦截\n  instance.interceptors.response.use(res => {\n    Toast.clear();\n    return res.data\n  }, err => {\n    console.log(err);\n  })\n\n  // 3.发送真正的网络请求\n  return instance(config) //返回一个Promise\n}\n"]}]}